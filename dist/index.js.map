{"version":3,"sources":["../src/index.ts","../src/theme.ts","../src/core/generator.ts","../src/presets/default.ts"],"sourcesContent":["/**\n * CSSngx - A modern, minimalist atomic CSS engine\n * Similar to UnoCSS but with its own unique approach\n */\n\nexport { createGenerator } from './core/generator';\nexport { defaultTheme } from './theme';\nexport { presetDefault } from './presets/default';\nexport type { CSSngxOptions, CSSngxUserConfig, Rule, RuleContext, Theme } from './types';","/**\n * Default theme for CSSngx\n * Defines the base styling variables and design tokens\n */\n\nimport type { Theme } from './types';\n\nexport const defaultTheme: Theme = {\n  // Color palette - modern, minimalist approach\n  colors: {\n    // Base colors\n    transparent: 'transparent',\n    current: 'currentColor',\n    \n    // Grayscale\n    black: '#000',\n    white: '#fff',\n    gray: {\n      50: '#f9fafb',\n      100: '#f3f4f6',\n      200: '#e5e7eb',\n      300: '#d1d5db',\n      400: '#9ca3af',\n      500: '#6b7280',\n      600: '#4b5563',\n      700: '#374151',\n      800: '#1f2937',\n      900: '#111827',\n      950: '#030712',\n    },\n    \n    // Primary colors\n    primary: {\n      50: '#f0f9ff',\n      100: '#e0f2fe',\n      200: '#bae6fd',\n      300: '#7dd3fc',\n      400: '#38bdf8',\n      500: '#0ea5e9',\n      600: '#0284c7',\n      700: '#0369a1',\n      800: '#075985',\n      900: '#0c4a6e',\n      950: '#082f49',\n    },\n    \n    // Accent colors\n    accent: {\n      50: '#fdf4ff',\n      100: '#fae8ff',\n      200: '#f5d0fe',\n      300: '#f0abfc',\n      400: '#e879f9',\n      500: '#d946ef',\n      600: '#c026d3',\n      700: '#a21caf',\n      800: '#86198f',\n      900: '#701a75',\n      950: '#4a044e',\n    },\n    \n    // Semantic colors\n    success: '#10b981',\n    warning: '#f59e0b',\n    error: '#ef4444',\n    info: '#3b82f6',\n  },\n  \n  // Spacing scale\n  spacing: {\n    px: '1px',\n    0: '0',\n    0.5: '0.125rem',\n    1: '0.25rem',\n    1.5: '0.375rem',\n    2: '0.5rem',\n    2.5: '0.625rem',\n    3: '0.75rem',\n    3.5: '0.875rem',\n    4: '1rem',\n    5: '1.25rem',\n    6: '1.5rem',\n    7: '1.75rem',\n    8: '2rem',\n    9: '2.25rem',\n    10: '2.5rem',\n    11: '2.75rem',\n    12: '3rem',\n    14: '3.5rem',\n    16: '4rem',\n    20: '5rem',\n    24: '6rem',\n    28: '7rem',\n    32: '8rem',\n    36: '9rem',\n    40: '10rem',\n    44: '11rem',\n    48: '12rem',\n    52: '13rem',\n    56: '14rem',\n    60: '15rem',\n    64: '16rem',\n    72: '18rem',\n    80: '20rem',\n    96: '24rem',\n  },\n  \n  // Typography\n  fontSizes: {\n    xs: '0.75rem',\n    sm: '0.875rem',\n    base: '1rem',\n    lg: '1.125rem',\n    xl: '1.25rem',\n    '2xl': '1.5rem',\n    '3xl': '1.875rem',\n    '4xl': '2.25rem',\n    '5xl': '3rem',\n    '6xl': '3.75rem',\n    '7xl': '4.5rem',\n    '8xl': '6rem',\n    '9xl': '8rem',\n  },\n  \n  fontWeights: {\n    thin: 100,\n    extralight: 200,\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n    extrabold: 800,\n    black: 900,\n  },\n  \n  lineHeights: {\n    none: 1,\n    tight: 1.25,\n    snug: 1.375,\n    normal: 1.5,\n    relaxed: 1.625,\n    loose: 2,\n  },\n  \n  // Border radius\n  borderRadius: {\n    none: '0',\n    sm: '0.125rem',\n    DEFAULT: '0.25rem',\n    md: '0.375rem',\n    lg: '0.5rem',\n    xl: '0.75rem',\n    '2xl': '1rem',\n    '3xl': '1.5rem',\n    full: '9999px',\n  },\n  \n  // Breakpoints for responsive design\n  breakpoints: {\n    sm: '640px',\n    md: '768px',\n    lg: '1024px',\n    xl: '1280px',\n    '2xl': '1536px',\n  },\n  \n  // Shadows\n  shadows: {\n    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n    DEFAULT: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\n    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n    lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\n    xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n    '2xl': '0 25px 50px -12px rgba(0, 0, 0, 0.25)',\n    inner: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)',\n    none: 'none',\n  },\n};","/**\n * Core generator for CSSngx\n * Responsible for parsing utility classes and generating CSS\n */\n\nimport MagicString from 'magic-string';\nimport type { CSSngxOptions, CSSngxUserConfig, Generator, Preset, Rule, Theme } from '../types';\nimport { defaultTheme } from '../theme';\n\n/**\n * Merges user configuration with default options\n */\nexport function resolveOptions(userConfig: CSSngxUserConfig = {}): CSSngxOptions {\n  return {\n    presets: userConfig.presets || [],\n    rules: userConfig.rules || [],\n    theme: {\n      ...defaultTheme,\n      ...userConfig.theme,\n    },\n    include: userConfig.include || [/\\.(jsx?|tsx?|vue|svelte|astro|html)$/],\n    exclude: userConfig.exclude || [/node_modules/],\n  };\n}\n\n/**\n * Creates a CSS generator instance\n */\nexport function createGenerator(userConfig: CSSngxUserConfig = {}): Generator {\n  const options = resolveOptions(userConfig);\n  const rules: Rule[] = [];\n  \n  // Collect rules from presets\n  for (const preset of options.presets) {\n    rules.push(...preset.rules);\n  }\n  \n  // Add user-defined rules\n  rules.push(...options.rules);\n  \n  const generator: Generator = {\n    /**\n     * Parses code to extract class names\n     */\n    parseClasses(code: string): Set<string> {\n      // Simple regex to extract class names from HTML/JSX/Vue/etc.\n      const classRegex = /class(Name)?=[\"']([^\"']*)[\"']/g;\n      const matches = Array.from(code.matchAll(classRegex));\n      \n      const classSet = new Set<string>();\n      \n      for (const match of matches) {\n        const classString = match[2];\n        const classes = classString.split(/\\s+/).filter(Boolean);\n        \n        for (const cls of classes) {\n          classSet.add(cls);\n          \n          // Also add hover variants if they exist in the code\n          if (cls.startsWith('hover-')) {\n            const baseClass = cls.substring(6); // Remove 'hover-' prefix\n            classSet.add(baseClass);\n          }\n        }\n      }\n      \n      return classSet;\n    },\n    \n    /**\n     * Matches a class name against defined rules\n     */\n    matchRules(className: string) {\n      for (const rule of rules) {\n        const match = className.match(rule.pattern);\n        if (match) {\n          return { rule, match };\n        }\n      }\n      return undefined;\n    },\n    \n    /**\n     * Generates CSS from code\n     */\n    async generate(code: string) {\n      const classes = generator.parseClasses(code);\n      const matched = new Set<string>();\n      const cssChunks: string[] = [];\n      \n      for (const className of classes) {\n        const result = generator.matchRules(className);\n        \n        if (result) {\n          const { rule, match } = result;\n          const cssOutput = rule.handler(match, { theme: options.theme, generator });\n          \n          if (cssOutput) {\n            matched.add(className);\n            \n            if (Array.isArray(cssOutput)) {\n              cssChunks.push(...cssOutput);\n            } else {\n              cssChunks.push(cssOutput);\n            }\n          }\n        }\n      }\n      \n      return {\n        css: cssChunks.join('\\n'),\n        matched,\n      };\n    },\n  };\n  \n  return generator;\n}","/**\n * Default preset for CSSngx\n * Provides common utility classes for layout, typography, colors, and more\n */\n\nimport type { Preset, Rule } from '../types';\nimport { defaultTheme } from '../theme';\n\n// Layout rules\nconst layoutRules: Rule[] = [\n  // Display\n  {\n    name: 'display',\n    pattern: /^(block|inline|inline-block|flex|inline-flex|grid|inline-grid|contents|hidden|none)$/,\n    handler: ([className]) => `.${className} { display: ${className}; }`,\n  },\n  \n  // Flex\n  {\n    name: 'flex',\n    pattern: /^flex-(row|col|row-reverse|col-reverse)$/,\n    handler: ([className, direction]) => {\n      const value = direction === 'col' ? 'column' : \n                   direction === 'col-reverse' ? 'column-reverse' : direction;\n      return `.${className} { display: flex; flex-direction: ${value}; }`;\n    },\n  },\n  {\n    name: 'flex-wrap',\n    pattern: /^flex-(wrap|nowrap|wrap-reverse)$/,\n    handler: ([className, wrap]) => `.${className} { flex-wrap: ${wrap}; }`,\n  },\n  {\n    name: 'flex-grow-shrink',\n    pattern: /^flex-(grow|shrink)(-\\d+)?$/,\n    handler: ([className, type, value]) => {\n      const numValue = value ? value.substring(1) : '1';\n      return `.${className} { flex-${type}: ${numValue}; }`;\n    },\n  },\n  \n  // Grid\n  {\n    name: 'grid-cols',\n    pattern: /^grid-cols-(\\d+)$/,\n    handler: ([className, cols]) => `.${className} { display: grid; grid-template-columns: repeat(${cols}, minmax(0, 1fr)); }`,\n  },\n  {\n    name: 'grid-rows',\n    pattern: /^grid-rows-(\\d+)$/,\n    handler: ([className, rows]) => `.${className} { display: grid; grid-template-rows: repeat(${rows}, minmax(0, 1fr)); }`,\n  },\n  \n  // Gap\n  {\n    name: 'gap',\n    pattern: /^gap-(\\d+|\\d+\\.\\d+)$/,\n    handler: ([className, size], { theme }) => {\n      const value = theme.spacing?.[size] || `${size}rem`;\n      return `.${className} { gap: ${value}; }`;\n    },\n  },\n  \n  // Positioning\n  {\n    name: 'position',\n    pattern: /^(static|relative|absolute|fixed|sticky)$/,\n    handler: ([className]) => `.${className} { position: ${className}; }`,\n  },\n];\n\n// Spacing rules (margin, padding)\nconst spacingRules: Rule[] = [\n  // Margin\n  {\n    name: 'margin',\n    pattern: /^m([trblxy])?-(\\d+|\\d+\\.\\d+)$/,\n    handler: ([className, direction, size], { theme }) => {\n      const value = theme.spacing?.[size] || `${size}rem`;\n      let prop = 'margin';\n      \n      if (direction) {\n        switch (direction) {\n          case 't': prop = 'margin-top'; break;\n          case 'r': prop = 'margin-right'; break;\n          case 'b': prop = 'margin-bottom'; break;\n          case 'l': prop = 'margin-left'; break;\n          case 'x': return `.${className} { margin-left: ${value}; margin-right: ${value}; }`;\n          case 'y': return `.${className} { margin-top: ${value}; margin-bottom: ${value}; }`;\n        }\n      }\n      \n      return `.${className} { ${prop}: ${value}; }`;\n    },\n  },\n  \n  // Padding\n  {\n    name: 'padding',\n    pattern: /^p([trblxy])?-(\\d+|\\d+\\.\\d+)$/,\n    handler: ([className, direction, size], { theme }) => {\n      const value = theme.spacing?.[size] || `${size}rem`;\n      let prop = 'padding';\n      \n      if (direction) {\n        switch (direction) {\n          case 't': prop = 'padding-top'; break;\n          case 'r': prop = 'padding-right'; break;\n          case 'b': prop = 'padding-bottom'; break;\n          case 'l': prop = 'padding-left'; break;\n          case 'x': return `.${className} { padding-left: ${value}; padding-right: ${value}; }`;\n          case 'y': return `.${className} { padding-top: ${value}; padding-bottom: ${value}; }`;\n        }\n      }\n      \n      return `.${className} { ${prop}: ${value}; }`;\n    },\n  },\n];\n\n// Typography rules\nconst typographyRules: Rule[] = [\n  // Font size\n  {\n    name: 'font-size',\n    pattern: /^text-(xs|sm|base|lg|xl|\\d+xl)$/,\n    handler: ([className, size], { theme }) => {\n      const value = theme.fontSizes?.[size];\n      return value ? `.${className} { font-size: ${value}; }` : undefined;\n    },\n  },\n  \n  // Font weight\n  {\n    name: 'font-weight',\n    pattern: /^font-(thin|extralight|light|normal|medium|semibold|bold|extrabold|black)$/,\n    handler: ([className, weight], { theme }) => {\n      const value = theme.fontWeights?.[weight];\n      return value ? `.${className} { font-weight: ${value}; }` : undefined;\n    },\n  },\n  \n  // Line height\n  {\n    name: 'line-height',\n    pattern: /^leading-(none|tight|snug|normal|relaxed|loose)$/,\n    handler: ([className, height], { theme }) => {\n      const value = theme.lineHeights?.[height];\n      return value ? `.${className} { line-height: ${value}; }` : undefined;\n    },\n  },\n  \n  // Text alignment\n  {\n    name: 'text-align',\n    pattern: /^text-(left|center|right|justify)$/,\n    handler: ([className, align]) => `.${className} { text-align: ${align}; }`,\n  },\n  \n  // Text decoration\n  {\n    name: 'text-decoration',\n    pattern: /^(underline|line-through|no-underline)$/,\n    handler: ([className]) => {\n      if (className === 'no-underline') {\n        return `.${className} { text-decoration: none; }`;\n      }\n      return `.${className} { text-decoration: ${className}; }`;\n    },\n  },\n];\n\n// Color rules\nconst colorRules: Rule[] = [\n  // Text color\n  {\n    name: 'text-color',\n    pattern: /^text-([a-z]+)(?:-(\\d+))?$/,\n    handler: ([className, color, shade], { theme }) => {\n      let value;\n      const colorValue = theme.colors?.[color];\n      \n      if (!colorValue) return undefined;\n      \n      if (typeof colorValue === 'string') {\n        value = colorValue;\n      } else if (shade && typeof colorValue === 'object') {\n        value = colorValue[shade];\n      } else if (typeof colorValue === 'object') {\n        value = colorValue['500'] || Object.values(colorValue)[0];\n      }\n      \n      return value ? `.${className} { color: ${value}; }` : undefined;\n    },\n  },\n  \n  // Background color\n  {\n    name: 'background-color',\n    pattern: /^bg-([a-z]+)(?:-(\\d+))?$/,\n    handler: ([className, color, shade], { theme }) => {\n      let value;\n      const colorValue = theme.colors?.[color];\n      \n      if (!colorValue) return undefined;\n      \n      if (typeof colorValue === 'string') {\n        value = colorValue;\n      } else if (shade && typeof colorValue === 'object') {\n        value = colorValue[shade];\n      } else if (typeof colorValue === 'object') {\n        value = colorValue['500'] || Object.values(colorValue)[0];\n      }\n      \n      return value ? `.${className} { background-color: ${value}; }` : undefined;\n    },\n  },\n];\n\n// Border rules\nconst borderRules: Rule[] = [\n  // Border width\n  {\n    name: 'border-width',\n    pattern: /^border(?:-(\\d+))?$/,\n    handler: ([className, width]) => {\n      const value = width ? `${width}px` : '1px';\n      return `.${className} { border-width: ${value}; border-style: solid; }`;\n    },\n  },\n  \n  // Border radius\n  {\n    name: 'border-radius',\n    pattern: /^rounded(?:-(none|sm|md|lg|xl|\\d+xl|full))?$/,\n    handler: ([className, radius], { theme }) => {\n      const value = radius ? theme.borderRadius?.[radius] : theme.borderRadius?.DEFAULT;\n      return value ? `.${className} { border-radius: ${value}; }` : undefined;\n    },\n  },\n  \n  // Border color\n  {\n    name: 'border-color',\n    pattern: /^border-([a-z]+)(?:-(\\d+))?$/,\n    handler: ([className, color, shade], { theme }) => {\n      let value;\n      const colorValue = theme.colors?.[color];\n      \n      if (!colorValue) return undefined;\n      \n      if (typeof colorValue === 'string') {\n        value = colorValue;\n      } else if (shade && typeof colorValue === 'object') {\n        value = colorValue[shade];\n      } else if (typeof colorValue === 'object') {\n        value = colorValue['500'] || Object.values(colorValue)[0];\n      }\n      \n      return value ? `.${className} { border-color: ${value}; }` : undefined;\n    },\n  },\n];\n\n// Shadow rules\nconst shadowRules: Rule[] = [\n  {\n    name: 'shadow',\n    pattern: /^shadow(?:-(sm|md|lg|xl|\\d+xl|inner|none))?$/,\n    handler: ([className, size], { theme }) => {\n      const value = size ? theme.shadows?.[size] : theme.shadows?.DEFAULT;\n      return value ? `.${className} { box-shadow: ${value}; }` : undefined;\n    },\n  },\n];\n\n// Hover variant rules\nconst hoverRules: Rule[] = [\n  // Hover text color\n  {\n    name: 'hover-text-color',\n    pattern: /^hover-text-([a-z]+)(?:-?(\\d+))?$/,\n    handler: ([className, color, shade], { theme }) => {\n      let value;\n      const colorValue = theme.colors?.[color];\n      \n      if (!colorValue) return undefined;\n      \n      if (typeof colorValue === 'string') {\n        value = colorValue;\n      } else if (shade && typeof colorValue === 'object') {\n        value = colorValue[shade];\n      } else if (typeof colorValue === 'object') {\n        value = colorValue['500'] || Object.values(colorValue)[0];\n      }\n      \n      return value ? `.${className}:hover { color: ${value}; }` : undefined;\n    },\n  },\n  \n  // Hover background color\n  {\n    name: 'hover-background-color',\n    pattern: /^hover-bg-([a-z]+)(?:-?(\\d+))?$/,\n    handler: ([className, color, shade], { theme }) => {\n      let value;\n      const colorValue = theme.colors?.[color];\n      \n      if (!colorValue) return undefined;\n      \n      if (typeof colorValue === 'string') {\n        value = colorValue;\n      } else if (shade && typeof colorValue === 'object') {\n        value = colorValue[shade];\n      } else if (typeof colorValue === 'object') {\n        value = colorValue['500'] || Object.values(colorValue)[0];\n      }\n      \n      return value ? `.${className}:hover { background-color: ${value}; }` : undefined;\n    },\n  },\n  \n  // Hover text decoration\n  {\n    name: 'hover-text-decoration',\n    pattern: /^hover-(underline|line-through|no-underline)$/,\n    handler: ([className, decoration]) => {\n      if (decoration === 'no-underline') {\n        return `.${className}:hover { text-decoration: none; }`;\n      }\n      return `.${className}:hover { text-decoration: ${decoration}; }`;\n    },\n  },\n];\n\n// Combine all rules\nconst allRules: Rule[] = [\n  ...layoutRules,\n  ...spacingRules,\n  ...typographyRules,\n  ...colorRules,\n  ...borderRules,\n  ...shadowRules,\n  ...hoverRules,\n];\n\n// Export the default preset\nexport const presetDefault: Preset = {\n  name: 'default',\n  rules: allRules,\n  theme: defaultTheme,\n};"],"mappings":"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","names":[]}